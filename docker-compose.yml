version: '3.8'

services:
  database:
    image: postgres:15-alpine
    container_name: marketing-ai-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: marketing_ai
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - marketing-ai-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: marketing-ai-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@database:5432/marketing_ai
      LLM_PROVIDER: ${LLM_PROVIDER:-anthropic}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - marketing-ai-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: marketing-ai-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - marketing-ai-network
    command: npm run dev

networks:
  marketing-ai-network:
    driver: bridge

volumes:
  postgres_data:
